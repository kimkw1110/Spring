<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: 이 서블릿의 요청 처리 인프라를 정의 -->
	
	<!-- Spring MVC @Controller 프로그래밍 모델 활성화 -->
	<annotation-driven />

	<!-- /resources/**로의 HTTP GET 요청을 처리하여 ${webappRoot}/resources 디렉토리에서 정적 자원을 효율적으로 제공 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- @Controller에 의해 선택된 뷰를 /WEB-INF/views 디렉토리의 .jsp 자원으로 해석 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 뷰 파일의 접두사 설정 -->
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<!-- 뷰 파일의 접미사 설정 -->
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- com.company.hello.member 패키지에서 @Component, @Service, @Repository, @Controller 어노테이션이 붙은 클래스를 자동으로 스캔 -->
	<context:component-scan base-package="com.company.hello.member" />
	
	<!-- 
		MemberService 빈을 명시적으로 정의
		현재는 @Service 어노테이션을 사용하고 있으므로 주석 처리 
	-->
	<!-- <beans:bean id="memberService" class="com.company.hello.member.MemberService" /> -->

</beans:beans>
